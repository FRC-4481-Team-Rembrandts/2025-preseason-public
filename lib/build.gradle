import groovy.json.JsonSlurper

plugins {
    id 'java'
    id "edu.wpi.first.GradleRIO" version "2025.1.1-beta-1"
    id "com.peterabeles.gversion" version "1.10.3"
    id "com.diffplug.spotless" version '6.25.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url = uri("https://maven.pkg.github.com/Mechanical-Advantage/AdvantageKit")
        credentials {
            username = "Mechanical-Advantage-Bot"
            password = "\u0067\u0068\u0070\u005f\u006e\u0056\u0051\u006a\u0055\u004f\u004c\u0061\u0079\u0066\u006e\u0078\u006e\u0037\u0051\u0049\u0054\u0042\u0032\u004c\u004a\u006d\u0055\u0070\u0073\u0031\u006d\u0037\u004c\u005a\u0030\u0076\u0062\u0070\u0063\u0051"
        }
    }
}


dependencies {
    annotationProcessor wpi.java.deps.wpilibAnnotations()
    implementation wpi.java.deps.wpilib()
    implementation wpi.java.vendor.java()

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)
    simulationDebug wpi.sim.enableDebug()

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)
    simulationRelease wpi.sim.enableRelease()

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // AdvantageKit
    def akitJson = new JsonSlurper().parseText(new File(projectDir.getAbsolutePath() + "/vendordeps/AdvantageKit.json").text)
    annotationProcessor "org.littletonrobotics.akit.junction:junction-autolog:$akitJson.version"
}

gversion {
    srcDir       = "src/main/java/"
    classPackage = "frc.lib"
    className    = "BuildInfo"
    dateFormat   = "yyyy-MM-dd HH:mm:ss"
    timeZone     = "Europe/Berlin" // Use preferred time zone
    indent       = "    "
}

spotless {
    // limit format enforcement to just the files changed by this feature branch
    ratchetFrom 'origin/main'

    java {
        // Exclude files from 6328 TODO place in own root package
        targetExclude('src/main/java/frc/lib/hardware/rev/SparkUtil.java')
        targetExclude('src/main/java/frc/lib/BuildInfo.java')

        // Use the default importOrder configuration
        importOrder()

        // remove unused imports
        removeUnusedImports('cleanthat-javaparser-unnecessaryimport')

        // Formatting
        palantirJavaFormat('2.50.0').formatJavadoc(true)

        // fix formatting of type annotations
        formatAnnotations()

        // make sure every file has the following copyright header.
        licenseHeaderFile('misc/license-header.txt')
    }
}

configurations.configureEach {
    exclude group: "edu.wpi.first.wpilibj"
}

tasks.register('checkAkitInstall', JavaExec) {
    dependsOn "classes"
    mainClass = "org.littletonrobotics.junction.CheckInstall"
    classpath = sourceSets.main.runtimeClasspath
}

project.compileJava.dependsOn(createVersionFile)
compileJava.finalizedBy checkAkitInstall

// Configure jar and deploy tasks
wpi.java.configureTestTasks(test)

test {
    useJUnitPlatform()
}
